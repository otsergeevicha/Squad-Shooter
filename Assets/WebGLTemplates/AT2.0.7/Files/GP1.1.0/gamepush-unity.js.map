{"version":3,"file":"gamepush-unity.js","mappings":"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","sources":["webpack://gamepush_unity/./src/GamePushUnity.js","webpack://gamepush_unity/./src/index.js"],"sourcesContent":["export default class GamePushUnity {\r\n    constructor(gp) {\r\n        this.gp = gp;\r\n\r\n        this.gp.player.on('change', () => this.trigger('CallPlayerChange'));\r\n        this.gp.player.on('sync', (success) => {\r\n            this.trigger(success ? 'CallPlayerSyncComplete' : 'CallPlayerSyncError');\r\n        });\r\n        this.gp.player.on('load', (success) => {\r\n            this.trigger(success ? 'CallPlayerLoadComplete' : 'CallPlayerLoadError');\r\n        });\r\n        this.gp.player.on('login', (success) => {\r\n            this.trigger(success ? 'CallPlayerLoginComplete' : 'CallPlayerLoginError');\r\n        });\r\n\r\n        this.gp.on('event:connect', () => this.trigger('CallPlayerConnect'))\r\n\r\n        this.gp.player.on('fetchFields', (success) => {\r\n            if (success) {\r\n                this.trigger('CallPlayerFetchFieldsComplete', JSON.stringify(this.gp.player.fields.map((field) => ({ ...field, defaultValue: field.default }))));\r\n            } else {\r\n                this.trigger('CallPlayerFetchFieldsError');\r\n            }\r\n        });\r\n\r\n        // leaderboard\r\n        this.gp.leaderboard.on('open', () => this.trigger('CallLeaderboardOpen'));\r\n        this.gp.leaderboard.on('close', () => this.trigger('CallLeaderboardClose'));\r\n\r\n        // achievements\r\n        this.gp.achievements.on('open', () => this.trigger('CallAchievementsOpen'));\r\n        this.gp.achievements.on('close', () => {\r\n            this.trigger('CallAchievementsClose');\r\n            window.focus();\r\n        });\r\n\r\n        this.gp.achievements.on('unlock', () => this.trigger('CallAchievementsUnlock'));\r\n        this.gp.achievements.on('error:unlock', () => this.trigger('CallAchievementsUnlockError'));\r\n\r\n        // games collections\r\n        this.gp.gamesCollections.on('open', () => this.trigger('CallGamesCollectionsOpen'));\r\n        this.gp.gamesCollections.on('close', () => {\r\n            this.trigger('CallGamesCollectionsClose');\r\n            window.focus();\r\n        });\r\n\r\n        // fullscreen\r\n        this.gp.fullscreen.on('open', () => this.trigger('CallFullscreenOpen'));\r\n        this.gp.fullscreen.on('close', () => this.trigger('CallFullscreenClose'));\r\n        this.gp.fullscreen.on('change', () => this.trigger('CallFullscreenChange'));\r\n\r\n        // ads\r\n        this.gp.ads.on('start', () => this.trigger('CallAdsStart'));\r\n        this.gp.ads.on('close', (success) => {\r\n            this.trigger('CallAdsClose', success);\r\n            window.focus();\r\n        });\r\n\r\n        this.gp.ads.on('fullscreen:start', () => this.trigger('CallAdsFullscreenStart'));\r\n        this.gp.ads.on('fullscreen:close', (success) => this.trigger('CallAdsFullscreenClose', success));\r\n\r\n        this.gp.ads.on('preloader:start', () => this.trigger('CallAdsPreloaderStart'));\r\n        this.gp.ads.on('preloader:close', (success) => this.trigger('CallAdsPreloaderClose', success));\r\n\r\n        this.gp.ads.on('rewarded:start', () => this.trigger('CallAdsRewardedStart'));\r\n        this.gp.ads.on('rewarded:close', (success) => this.trigger('CallAdsRewardedClose', (success)));\r\n        this.gp.ads.on('rewarded:reward', () => this.trigger('CallAdsRewardedReward', this.lastRewardedTag));\r\n\r\n        this.gp.ads.on('sticky:start', () => this.trigger('CallAdsStickyStart'));\r\n        this.gp.ads.on('sticky:close', () => this.trigger('CallAdsStickyClose'));\r\n        this.gp.ads.on('sticky:refresh', () => this.trigger('CallAdsStickyRefresh'));\r\n        this.gp.ads.on('sticky:render', () => this.trigger('CallAdsStickyRender'));\r\n\r\n        // socials\r\n        this.gp.socials.on('share', (success) => {\r\n            this.trigger('CallSocialsShare', success);\r\n            window.focus();\r\n        });\r\n        this.gp.socials.on('post', (success) => {\r\n            this.trigger('CallSocialsPost', success);\r\n            window.focus();\r\n        });\r\n        this.gp.socials.on('invite', (success) => {\r\n            this.trigger('CallSocialsInvite', success);\r\n            window.focus();\r\n        });\r\n        this.gp.socials.on('joinCommunity', (success) => {\r\n            this.trigger('CallSocialsJoinCommunity', success);\r\n            window.focus();\r\n        });\r\n\r\n        // gp\r\n        this.gp.on('change:language', (lang) => this.trigger('CallChangeLanguage', lang));\r\n        this.gp.on('change:avatarGenerator', (ag) => this.trigger('CallChangeAvatarGenerator', ag));\r\n        this.gp.on('pause', () => this.trigger('CallOnPause'));\r\n        this.gp.on('resume', () => this.trigger('CallOnResume'));\r\n\r\n        //documents\r\n        this.gp.documents.on('open', () => this.trigger('CallOnDocumentsOpen'));\r\n        this.gp.documents.on('close', () => {\r\n            this.trigger('CallOnDocumentsClose');\r\n            window.focus();\r\n        });\r\n\r\n        this.gp.documents.on('fetch', (document) => this.trigger('CallOnDocumentsFetchSuccess', document.content));\r\n        this.gp.documents.on('error:fetch', () => this.trigger('CallOnDocumentsFetchError'));\r\n\r\n\r\n        // channels\r\n        this.gp.channels.on('createChannel', (channel) => {\r\n            this.trigger('CallOnCreateChannel', JSON.stringify(mapChannel(channel)));\r\n        });\r\n        this.gp.channels.on('error:createChannel', (err) => this.trigger('CallOnCreateChannelError'));\r\n\r\n        this.gp.channels.on('updateChannel', (channel) => {\r\n            this.trigger('CallOnUpdateChannel', JSON.stringify(mapChannel(channel)));\r\n        });\r\n        this.gp.channels.on('error:updateChannel', (err) => this.trigger('CallOnUpdateChannelError'));\r\n\r\n        this.gp.channels.on('deleteChannel', () => this.trigger('CallOnDeleteChannelSuccess'));\r\n        this.gp.channels.on('event:deleteChannel', (channel) => { this.trigger('CallOnDeleteChannelEvent', channel.id); });\r\n        this.gp.channels.on('error:deleteChannel', (err) => this.trigger('CallOnDeleteChannelError'));\r\n\r\n        this.gp.channels.on('fetchChannel', (channel) => {\r\n            this.trigger('CallOnFetchChannel', JSON.stringify(mapChannel(channel)));\r\n        });\r\n        this.gp.channels.on('error:fetchChannel', (err) => this.trigger('CallOnFetchChannelError'));\r\n\r\n        this.gp.channels.on('fetchChannels', (result) => {\r\n            this.trigger('CallOnFetchChannelsCanLoadMore', result.canLoadMore);\r\n            this.trigger('CallOnFetchChannels', JSON.stringify(result.items.map(mapChannel)));\r\n        });\r\n        this.gp.channels.on('error:fetchChannels', (err) => this.trigger('CallOnFetchChannelsError'));\r\n\r\n        this.gp.channels.on('fetchMoreChannels', (result) => {\r\n            this.trigger('CallOnFetchMoreChannelsCanLoadMore', result.canLoadMore);\r\n            this.trigger('CallOnFetchMoreChannels', JSON.stringify(result.items.map(mapChannel)));\r\n        });\r\n        this.gp.channels.on('error:fetchMoreChannels', (err) => this.trigger('CallOnFetchMoreChannelsError'));\r\n\r\n        gp.channels.on('openChat', () => this.trigger('CallOnOpenChat'));\r\n        gp.channels.on('closeChat', () => this.trigger('CallOnCloseChat'));\r\n        gp.channels.on('error:openChat', (err) => this.trigger('CallOnOpenChatError'));\r\n\r\n        this.gp.channels.on('join', () => this.trigger('CallOnJoinSuccess'));\r\n        this.gp.channels.on('event:join', (member) => { this.trigger('CallOnJoinEvent', JSON.stringify(member)); });\r\n        this.gp.channels.on('error:join', (err) => this.trigger('CallOnJoinError'));\r\n\r\n\r\n        this.gp.channels.on('event:joinRequest', (joinRequest) => { this.trigger('CallOnJoinRequest', JSON.stringify(joinRequest)); });\r\n\r\n        this.gp.channels.on('cancelJoin', () => this.trigger('CallOnCancelJoinSuccess'));\r\n        this.gp.channels.on('event:cancelJoin', (joinRequest) => { this.trigger('CallOnCancelJoinEvent', JSON.stringify(joinRequest)); });\r\n        this.gp.channels.on('error:cancelJoin', (err) => this.trigger('CallOnCancelJoinError'));\r\n\r\n        this.gp.channels.on('leave', () => this.trigger('CallOnLeaveSuccess'));\r\n        this.gp.channels.on('event:leave', (memberLeave) => { this.trigger('CallOnLeaveEvent', JSON.stringify(memberLeave)); });\r\n        this.gp.channels.on('error:leave', (err) => this.trigger('CallOnLeaveError'));\r\n\r\n        this.gp.channels.on('kick', () => this.trigger('CallOnKick'));\r\n        this.gp.channels.on('error:kick', (err) => this.trigger('CallOnKickError'));\r\n\r\n        this.gp.channels.on('fetchMembers', (result) => {\r\n            this.trigger('CallOnFetchMembersCanLoadMore', result.canLoadMore);\r\n            this.trigger('CallOnFetchMembers', JSON.stringify(result.items));\r\n        });\r\n        this.gp.channels.on('error:fetchMembers', (err) => this.trigger('CallOnFetchMembersError'));\r\n\r\n        this.gp.channels.on('fetchMoreMembers', (result) => {\r\n            this.trigger('CallOnFetchMoreMembersCanLoadMore', result.canLoadMore);\r\n            this.trigger('CallOnFetchMoreMembers', JSON.stringify(result.items));\r\n        });\r\n        this.gp.channels.on('error:fetchMoreMembers', (err) => this.trigger('CallOnFetchMoreMembersError'));\r\n\r\n        this.gp.channels.on('mute', () => this.trigger('CallOnMuteSuccess'));\r\n        this.gp.channels.on('event:mute', (mute) => { this.trigger('CallOnMuteEvent', JSON.stringify(mute)); });\r\n        this.gp.channels.on('error:mute', (err) => this.trigger('CallOnMuteError'));\r\n\r\n        this.gp.channels.on('unmute', () => this.trigger('CallOnUnmuteSuccess'));\r\n        this.gp.channels.on('event:unmute', (mute) => { this.trigger('CallOnUnmuteEvent', JSON.stringify(mute)); });\r\n        this.gp.channels.on('error:unmute', (err) => this.trigger('CallOnUnmuteError'));\r\n\r\n        this.gp.channels.on('sendInvite', () => this.trigger('CallOnSendInvite'));\r\n        this.gp.channels.on('error:sendInvite', (err) => this.trigger('CallOnSendInviteError'));\r\n\r\n        this.gp.channels.on('event:invite', (invite) => { this.trigger('CallOnInvite', JSON.stringify(invite)); });\r\n\r\n        this.gp.channels.on('cancelInvite', () => this.trigger('CallOnCancelInviteSuccess'));\r\n        this.gp.channels.on('event:cancelInvite', (invite) => {\r\n            this.trigger('CallOnCancelInviteEvent', JSON.stringify(invite));\r\n        });\r\n        this.gp.channels.on('error:cancelInvite', (err) => this.trigger('CallOnCancelInviteError'));\r\n\r\n        this.gp.channels.on('acceptInvite', () => this.trigger('CallOnAcceptInvite'));\r\n        this.gp.channels.on('error:acceptInvite', (err) => this.trigger('CallOnAcceptInviteError'));\r\n\r\n\r\n        this.gp.channels.on('rejectInvite', () => this.trigger('CallOnRejectInviteSuccess'));\r\n        this.gp.channels.on('event:rejectInvite', (invite) => { this.trigger('CallOnRejectInviteEvent', JSON.stringify(invite)); });\r\n        this.gp.channels.on('error:rejectInvite', (err) => this.trigger('CallOnRejectInviteError'));\r\n\r\n        this.gp.channels.on('fetchInvites', (result) => {\r\n            this.trigger('CallOnFetchInvitesCanLoadMore', result.canLoadMore);\r\n            this.trigger('CallOnFetchInvites', JSON.stringify(result.items.map(mapItemWithChannel)));\r\n        });\r\n        this.gp.channels.on('error:fetchInvites', (err) => this.trigger('CallOnFetchInvitesError'));\r\n\r\n\r\n        this.gp.channels.on('fetchMoreInvites', (result) => {\r\n            this.trigger('CallOnFetchMoreInvitesCanLoadMore', result.canLoadMore);\r\n            this.trigger('CallOnFetchMoreInvites', JSON.stringify(result.items.map(mapItemWithChannel)));\r\n        });\r\n        this.gp.channels.on('error:fetchMoreInvites', (err) => this.trigger('CallOnFetchMoreInvitesError'));\r\n\r\n\r\n        this.gp.channels.on('fetchChannelInvites', (result) => {\r\n            this.trigger('CallOnFetchChannelInvitesCanLoadMore', result.canLoadMore);\r\n            this.trigger('CallOnFetchChannelInvites', JSON.stringify(result.items));\r\n        });\r\n        this.gp.channels.on('error:fetchChannelInvites', (err) => this.trigger('CallOnFetchChannelInvitesError'));\r\n\r\n\r\n        this.gp.channels.on('fetchMoreChannelInvites', (result) => {\r\n            this.trigger('CallOnFetchMoreChannelInvitesCanLoadMore', result.canLoadMore);\r\n            this.trigger('CallOnFetchMoreChannelInvites', JSON.stringify(result.items));\r\n        });\r\n        this.gp.channels.on('error:fetchMoreChannelInvites', (err) => this.trigger('CallOnFetchMoreChannelInvitesError'));\r\n\r\n\r\n        this.gp.channels.on('fetchSentInvites', (result) => {\r\n            this.trigger('CallOnFetchSentInvitesCanLoadMore', result.canLoadMore);\r\n            this.trigger('CallOnFetchSentInvites', JSON.stringify(result.items.map(mapItemWithChannel)));\r\n        });\r\n        this.gp.channels.on('error:fetchSentInvites', (err) => this.trigger('CallOnFetchSentInvitesError'));\r\n\r\n\r\n        this.gp.channels.on('fetchMoreSentInvites', (result) => {\r\n            this.trigger('CallOnFetchMoreSentInvitesCanLoadMore', result.canLoadMore);\r\n            this.trigger('CallOnFetchMoreSentInvites', JSON.stringify(result.items.map(mapItemWithChannel)));\r\n        });\r\n        this.gp.channels.on('error:fetchMoreSentInvites', (err) => this.trigger('CallOnFetchMoreSentInvitesError'));\r\n\r\n\r\n        this.gp.channels.on('acceptJoinRequest', () => this.trigger('CallOnAcceptJoinRequest'));\r\n        this.gp.channels.on('error:acceptJoinRequest', (err) => this.trigger('CallOnAcceptJoinRequestError'));\r\n\r\n\r\n        this.gp.channels.on('rejectJoinRequest', () => this.trigger('CallOnRejectJoinRequestSuccess'));\r\n        this.gp.channels.on('event:rejectJoinRequest', (joinRequest) => {\r\n            this.trigger('CallOnRejectJoinRequestEvent', JSON.stringify(joinRequest));\r\n        });\r\n        this.gp.channels.on('error:rejectJoinRequest', (err) => this.trigger('CallOnRejectJoinRequestError'));\r\n\r\n\r\n        this.gp.channels.on('fetchJoinRequests', (result) => {\r\n            this.trigger('CallOnFetchJoinRequestsCanLoadMore', result.canLoadMore);\r\n            this.trigger('CallOnFetchJoinRequests', JSON.stringify(result.items));\r\n        });\r\n        this.gp.channels.on('error:fetchJoinRequests', (err) => this.trigger('CallOnFetchJoinRequestsError'));\r\n\r\n\r\n\r\n        this.gp.channels.on('fetchMoreJoinRequests', (result) => {\r\n            this.trigger('CallOnFetchMoreJoinRequestsCanLoadMore', result.canLoadMore);\r\n            this.trigger('CallOnFetchMoreJoinRequests', JSON.stringify(result.items));\r\n        });\r\n        this.gp.channels.on('error:fetchMoreJoinRequests', (err) => this.trigger('CallOnFetchMoreJoinRequestsError'));\r\n\r\n\r\n\r\n        this.gp.channels.on('fetchSentJoinRequests', (result) => {\r\n            this.trigger('CallOnFetchSentJoinRequestsCanLoadMore', result.canLoadMore);\r\n            this.trigger('CallOnFetchSentJoinRequests', JSON.stringify(result.items.map(mapItemWithChannel)));\r\n        });\r\n        this.gp.channels.on('error:fetchSentJoinRequests', (err) => this.trigger('CallOnFetchSentJoinRequestsError'));\r\n\r\n\r\n        this.gp.channels.on('fetchMoreSentJoinRequests', (result) => {\r\n            this.trigger('CallOnFetchMoreSentJoinRequestsCanLoadMore', result.canLoadMore);\r\n            this.trigger('CallOnFetchMoreSentJoinRequests', JSON.stringify(result.items.map(mapItemWithChannel)));\r\n        });\r\n        this.gp.channels.on('error:fetchMoreSentJoinRequests', (err) => this.trigger('CallOnFetchMoreSentJoinRequestsError'));\r\n\r\n        this.gp.channels.on('sendMessage', (message) => { this.trigger('CallOnSendMessage', JSON.stringify(message)); });\r\n        this.gp.channels.on('error:sendMessage', (err) => this.trigger('CallOnSendMessageError'));\r\n\r\n        this.gp.channels.on('event:message', (message) => { this.trigger('CallOnMessage', JSON.stringify(message)); });\r\n\r\n        this.gp.channels.on('editMessage', (message) => { this.trigger('CallOnEditMessageSuccess', JSON.stringify(message)); });\r\n        this.gp.channels.on('event:editMessage', (message) => { this.trigger('CallOnEditMessageEvent', JSON.stringify(message)); });\r\n        this.gp.channels.on('error:editMessage', (err) => this.trigger('CallOnEditMessageError'));\r\n\r\n\r\n        this.gp.channels.on('deleteMessage', () => this.trigger('CallOnDeleteMessageSuccess'));\r\n        this.gp.channels.on('event:deleteMessage', (message) => { this.trigger('CallOnDeleteMessageEvent', JSON.stringify(message)); });\r\n        this.gp.channels.on('error:deleteMessage', (err) => this.trigger('CallOnDeleteMessageError'));\r\n    }\r\n\r\n    trigger(eventName, value) {\r\n        if (window.unityInstance !== null) {\r\n            window.unityInstance.SendMessage('GamePushSDK', eventName, this.toUnity(value));\r\n        }\r\n    }\r\n\r\n    toUnity(value) {\r\n        switch (typeof (value)) {\r\n            case 'boolean': {\r\n                return String(value);\r\n            }\r\n            case 'number': {\r\n                return value;\r\n            }\r\n            case 'string': {\r\n                return value;\r\n            }\r\n            case 'object': {\r\n                return JSON.stringify(value);\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n\r\n\r\n\r\n    mapItemsWithChannel(items = {}) {\r\n        return {\r\n            ...items,\r\n            ch_private: items.private\r\n        };\r\n    }\r\n\r\n    Language() {\r\n        return this.gp.language;\r\n    }\r\n    AvatarGenerator() {\r\n        return this.gp.avatarGenerator;\r\n    }\r\n    PlatformType() {\r\n        return this.gp.platform.type;\r\n    }\r\n    PlatformHasIntegratedAuth() {\r\n        return this.toUnity(this.gp.platform.hasIntegratedAuth);\r\n    }\r\n    PlatformIsExternalLinksAllowed() {\r\n        return this.toUnity(this.gp.platform.isExternalLinksAllowed);\r\n    }\r\n\r\n    AppTitle() {\r\n        return this.gp.app.title;\r\n    }\r\n    AppDescription() {\r\n        return this.gp.app.description;\r\n    }\r\n    AppImage() {\r\n        return this.gp.app.image;\r\n    }\r\n    AppUrl() {\r\n        return this.gp.app.url;\r\n    }\r\n\r\n\r\n    PlayerGetID() {\r\n        return this.gp.player.id;\r\n    }\r\n\r\n    PlayerGetScore() {\r\n        return this.gp.player.score;\r\n    }\r\n    PlayerSetScore(score) {\r\n        this.gp.player.score = Number(score);\r\n    }\r\n    PlayerAddScore(score) {\r\n        this.gp.player.score += Number(score);\r\n    }\r\n\r\n    PlayerGetName() {\r\n        return this.gp.player.name;\r\n    }\r\n    PlayerSetName(name) {\r\n        this.gp.player.name = name;\r\n    }\r\n\r\n    PlayerGetAvatar() {\r\n        return this.gp.player.avatar;\r\n    }\r\n    PlayerSetAvatar(src) {\r\n        this.gp.player.avatar = src;\r\n    }\r\n\r\n    PlayerGet(key) {\r\n        return this.toUnity(this.gp.player.get(key));\r\n    }\r\n\r\n    PlayerSetString(key, value) {\r\n        this.gp.player.set(key, value);\r\n    }\r\n    PlayerSetNumber(key, value) {\r\n        this.gp.player.set(key, value);\r\n    }\r\n    PlayerSetBool(key, value) {\r\n        if (value == \"True\")\r\n            value = true;\r\n        else if (value == \"False\")\r\n            value = false;\r\n        this.gp.player.set(key, value);\r\n    }\r\n    PlayerAdd(key, value) {\r\n        this.gp.player.add(key, Number(value));\r\n    }\r\n\r\n    PlayerHas(key) {\r\n        return this.toUnity(this.gp.player.has(key));\r\n    }\r\n\r\n    PlayerSetFlag(key, value) {\r\n        this.gp.player.set(key, !Boolean(value));\r\n    }\r\n    PlayerToggle(key) {\r\n        this.gp.player.toggle(key);\r\n    }\r\n\r\n    PlayerGetFieldName(key) {\r\n        return this.gp.player.getFieldName(key);\r\n    }\r\n    PlayerGetFieldVariantName(key, value) {\r\n        return this.gp.player.getFieldVariantName(key, value);\r\n    }\r\n    PlayerGetFieldVariantAt(key, index) {\r\n        const variant = this.gp.player.getField(key).variants[index];\r\n        return variant ? variant.value : '';\r\n    }\r\n    PlayerGetFieldVariantIndex(key, value) {\r\n        return this.gp.player.getField(key).variants.findIndex((v) => v.value === value);\r\n    }\r\n\r\n    PlayerReset() {\r\n        this.gp.player.reset();\r\n    }\r\n    PlayerRemove() {\r\n        this.gp.player.remove();\r\n    }\r\n    PlayerSync(override = false) {\r\n        return this.gp.player.sync({ override: Boolean(override) });\r\n    }\r\n    PlayerLoad() {\r\n        return this.gp.player.load();\r\n    }\r\n    PlayerLogin() {\r\n        return this.gp.player.login();\r\n    }\r\n    PlayerFetchFields() {\r\n        this.gp.player.fetchFields();\r\n    }\r\n\r\n    PlayerIsLoggedIn() {\r\n        return this.toUnity(this.gp.player.isLoggedIn);\r\n    }\r\n\r\n    PlayerHasAnyCredentials(key) {\r\n        return this.toUnity(this.gp.player.hasAnyCredentials);\r\n    }\r\n\r\n    PlayerIsStub(key) {\r\n        return this.toUnity(this.gp.player.isStub);\r\n    }\r\n\r\n\r\n    LeaderboardOpen(orderBy, order, limit, withMe, includeFields, displayFields) {\r\n        return this.gp.leaderboard\r\n            .open({\r\n                id: this.gp.player.id,\r\n                orderBy: orderBy\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n                order,\r\n                limit,\r\n                withMe,\r\n                includeFields: includeFields\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n                displayFields: displayFields\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n            })\r\n            .catch(console.warn);\r\n    }\r\n\r\n    LeaderboardFetch(tag, orderBy, order, limit, withMe, includeFields) {\r\n        return this.gp.leaderboard\r\n            .fetch({\r\n                id: this.gp.player.id,\r\n                orderBy: orderBy\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n                order,\r\n                limit,\r\n                withMe,\r\n                includeFields: includeFields\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n            })\r\n            .then((leaderboardInfo) => {\r\n                this.trigger('CallLeaderboardFetchTag', tag);\r\n                this.trigger('CallLeaderboardFetch', JSON.stringify(leaderboardInfo.players));\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallLeaderboardFetchError');\r\n            });\r\n    }\r\n\r\n    LeaderboardFetchPlayerRating(tag, orderBy, order) {\r\n        return this.gp.leaderboard\r\n            .fetchPlayerRating({\r\n                id: this.gp.player.id,\r\n                orderBy: orderBy\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n                order,\r\n            })\r\n            .then((result) => {\r\n                this.trigger('CallLeaderboardFetchPlayerTag', tag);\r\n                this.trigger('CallLeaderboardFetchPlayer', result.player.position);\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallLeaderboardFetchPlayerError');\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    /* LEADER BOARD SCOPED */\r\n\r\n    LeaderboardScopedOpen(idOrTag, variant, order, limit, includeFields, displayFields, withMe) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag };\r\n        return this.gp.leaderboard\r\n            .openScoped({\r\n                ...query,\r\n                variant,\r\n                order,\r\n                limit,\r\n                includeFields: includeFields\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n                displayFields: displayFields\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n                withMe,\r\n            })\r\n            .catch(console.warn);\r\n    }\r\n\r\n    LeaderboardScopedFetch(idOrTag, variant, order, limit, includeFields, withMe) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag };\r\n        return this.gp.leaderboard\r\n            .fetchScoped({\r\n                ...query,\r\n                variant,\r\n                order,\r\n                limit,\r\n                includeFields: includeFields\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n                withMe,\r\n            })\r\n            .then((leaderboardScopedInfo) => {\r\n                this.trigger('CallLeaderboardScopedFetchTag', idOrTag);\r\n                this.trigger('CallLeaderboardScopedFetchVariant', variant);\r\n                this.trigger('CallLeaderboardScopedFetch', JSON.stringify(leaderboardScopedInfo.players));\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallLeaderboardScopedFetchError');\r\n            });\r\n    }\r\n\r\n    LeaderboardScopedPublishRecord(idOrTag, variant, override, key1, value1, key2, value2, key3, value3) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag };\r\n        return this.gp.leaderboard\r\n            .publishRecord({\r\n                ...query,\r\n                variant,\r\n                override: Boolean(override),\r\n                record: {\r\n                    [key1]: value1,\r\n                    [key2]: value2,\r\n                    [key3]: value3,\r\n                },\r\n            })\r\n            .then(() => {\r\n                this.trigger('CallLeaderboardScopedPublishRecordComplete');\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallLeaderboardScopedPublishRecordError');\r\n            });\r\n    }\r\n\r\n    LeaderboardScopedFetchPlayerRating(idOrTag, variant, includeFields) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag };\r\n        return this.gp.leaderboard\r\n            .fetchPlayerRatingScoped({\r\n                ...query,\r\n                variant,\r\n                includeFields: includeFields\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n            })\r\n            .then((result) => {\r\n                this.trigger('CallLeaderboardScopedFetchPlayerTag', idOrTag);\r\n                this.trigger('CallLeaderboardScopedFetchPlayerVariant', variant);\r\n                this.trigger('CallLeaderboardScopedFetchPlayer', result.player.position);\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallLeaderboardFetchPlayerError');\r\n            });\r\n    }\r\n    /* LEADER BOARD SCOPED */\r\n\r\n\r\n\r\n    /* ACHIEVEMENTS */\r\n    AchievementsOpen() {\r\n        return this.gp.achievements.open().catch(console.warn);\r\n    }\r\n    AchievementsFetch() {\r\n        return this.gp.achievements\r\n            .fetch()\r\n            .then((result) => {\r\n                this.trigger('CallAchievementsFetch', JSON.stringify(result.achievements));\r\n                this.trigger('CallAchievementsFetchGroups', JSON.stringify(result.achievementsGroups));\r\n                this.trigger('CallPlayerAchievementsFetch', JSON.stringify(result.playerAchievements));\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallAchievementsFetchError');\r\n            });\r\n    }\r\n    AchievementsUnlock(idOrTag) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag };\r\n        return this.gp.achievements\r\n            .unlock(query)\r\n            .then((result) => {\r\n                if (result.success) {\r\n                    this.trigger('CallAchievementsUnlock', idOrTag);\r\n                    return;\r\n                }\r\n\r\n                this.trigger('CallAchievementsUnlockError');\r\n            })\r\n\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallAchievementsUnlockError');\r\n            });\r\n    }\r\n\r\n    AchievementsSetProgress(idOrTag, progress) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag };\r\n\r\n        return this.gp.achievements\r\n            .setProgress({ ...query, progress })\r\n\r\n            .then((result) => {\r\n                if (result.success) {\r\n                    this.trigger('CallAchievementsProgress', idOrTag);\r\n                    return;\r\n                }\r\n                this.trigger('CallAchievementsProgressError');\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallAchievementsProgressError');\r\n            });\r\n    }\r\n\r\n    AchievementsHas(idOrTag) {\r\n        return this.toUnity(this.gp.achievements.has(idOrTag));\r\n    }\r\n    AchievementsGetProgress(idOrTag) {\r\n        return this.gp.achievements.getProgress(idOrTag);\r\n    }\r\n    /* ACHIEVEMENTS */\r\n\r\n\r\n\r\n    /* PAYMENTS */\r\n    PaymentsFetchProducts() {\r\n        return this.gp.payments\r\n            .fetchProducts()\r\n            .then((result) => {\r\n                this.trigger('CallPaymentsFetchProducts', JSON.stringify(result.products));\r\n                this.trigger('CallPaymentsFetchPlayerPurcahses', JSON.stringify(result.playerPurchases));\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallPaymentsFetchProductsError');\r\n            });\r\n    }\r\n    PaymentsPurchase(idOrTag) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag };\r\n        return this.gp.payments\r\n            .purchase(query)\r\n            .then((result) => {\r\n\r\n                if (result.success) {\r\n                    this.trigger('CallPaymentsPurchase', idOrTag);\r\n                    window.focus();\r\n                    return;\r\n                }\r\n\r\n                this.trigger('CallPaymentsPurchaseError');\r\n\r\n                window.focus();\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallPaymentsPurchaseError');\r\n                window.focus();\r\n            });\r\n    }\r\n    PaymentsConsume(idOrTag) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag };\r\n        return this.gp.payments\r\n            .consume(query)\r\n            .then((result) => {\r\n                if (result.success) {\r\n                    this.trigger('CallPaymentsConsume', idOrTag);\r\n                    window.focus();\r\n                    return;\r\n                }\r\n\r\n                this.trigger('CallPaymentsConsumeError');\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallPaymentsConsumeError');\r\n            });\r\n    }\r\n\r\n\r\n    PaymentsIsAvailable() {\r\n        return this.toUnity(this.gp.payments.isAvailable);\r\n    }\r\n\r\n\r\n    // Subscriptions\r\n    PaymentsIsSubscriptionsAvailable() {\r\n        return this.toUnity(this.gp.payments.isSubscriptionsAvailable);\r\n    }\r\n\r\n    PaymentsSubscribe(idOrTag) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag };\r\n        return this.gp.payments.subscribe(query)\r\n            .then((result) => {\r\n                if (result.success) {\r\n                    this.trigger('CallPaymentsSubscribeSuccess', idOrTag);\r\n                } else {\r\n                    this.trigger('CallPaymentsSubscribeError');\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallPaymentsSubscribeError');\r\n            });\r\n    }\r\n\r\n\r\n    PaymentsUnsubscribe(idOrTag) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag };\r\n        return this.gp.payments.unsubscribe(query)\r\n            .then((result) => {\r\n                if (result.success) {\r\n                    this.trigger('CallPaymentsUnsubscribeSuccess', idOrTag);\r\n                } else {\r\n                    this.trigger('CallPaymentsUnsubscribeError');\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallPaymentsUnsubscribeError');\r\n            });\r\n    }\r\n\r\n    // Subscriptions\r\n\r\n    /* PAYMENTS */\r\n\r\n    FullscreenOpen() {\r\n        return this.gp.fullscreen.open();\r\n    }\r\n    FullscreenClose() {\r\n        return this.gp.fullscreen.close();\r\n    }\r\n    FullscreenToggle() {\r\n        return this.gp.fullscreen.toggle();\r\n    }\r\n\r\n\r\n\r\n    AdsShowFullscreen() {\r\n        return this.gp.ads.showFullscreen();\r\n    }\r\n    AdsShowRewarded(idOrTag) {\r\n        this.lastRewardedTag = idOrTag;\r\n        return this.gp.ads.showRewardedVideo();\r\n    }\r\n    AdsShowPreloader() {\r\n        return this.gp.ads.showPreloader();\r\n    }\r\n    AdsShowSticky() {\r\n        return this.gp.ads.showSticky();\r\n    }\r\n    AdsCloseSticky() {\r\n        return this.gp.ads.closeSticky();\r\n    }\r\n    AdsRefreshSticky() {\r\n        return this.gp.ads.refreshSticky();\r\n    }\r\n\r\n\r\n    AdsIsAdblockEnabled() {\r\n        return this.toUnity(this.gp.ads.isAdblockEnabled);\r\n    }\r\n\r\n    AdsIsStickyAvailable() {\r\n        return this.toUnity(this.gp.ads.isStickyAvailable);\r\n    }\r\n    AdsIsFullscreenAvailable() {\r\n        return this.toUnity(this.gp.ads.isFullscreenAvailable);\r\n    }\r\n    AdsIsRewardedAvailable() {\r\n        return this.toUnity(this.gp.ads.isRewardedAvailable);\r\n    }\r\n    AdsIsPreloaderAvailable() {\r\n        return this.toUnity(this.gp.ads.isPreloaderAvailable);\r\n    }\r\n\r\n\r\n    AdsIsStickyPlaying() {\r\n        return this.toUnity(this.gp.ads.isStickyPlaying);\r\n    }\r\n    AdsIsFullscreenPlaying() {\r\n        return this.toUnity(this.gp.ads.isFullscreenPlaying);\r\n    }\r\n    AdsIsRewardedPlaying() {\r\n        return this.toUnity(this.gp.ads.isRewardedPlaying);\r\n    }\r\n    AdsIsPreloaderPlaying() {\r\n        return this.toUnity(this.gp.ads.isPreloaderPlaying);\r\n    }\r\n\r\n\r\n    AnalyticsHit(url) {\r\n        return this.gp.analytics.hit(url);\r\n    }\r\n    AnalyticsGoal(event, value) {\r\n        return this.gp.analytics.goal(event, value);\r\n    }\r\n    SocialsShare(text, url, image) {\r\n        return this.gp.socials.share({ text, url, image });\r\n    }\r\n    SocialsPost(text, url, image) {\r\n        return this.gp.socials.post({ text, url, image });\r\n    }\r\n    SocialsInvite(text, url, image) {\r\n        return this.gp.socials.invite({ text, url, image });\r\n    }\r\n    SocialsJoinCommunity() {\r\n        return this.gp.socials.joinCommunity();\r\n    }\r\n    SocialsCommunityLink() {\r\n        return this.toUnity(this.gp.socials.communityLink);\r\n    }\r\n\r\n    SocialsIsSupportsShare() {\r\n        return this.toUnity(this.gp.socials.isSupportsShare);\r\n    }\r\n    SocialsIsSupportsNativeShare() {\r\n        return this.toUnity(this.gp.socials.isSupportsNativeShare);\r\n    }\r\n    SocialsIsSupportsNativePosts() {\r\n        return this.toUnity(this.gp.socials.isSupportsNativePosts);\r\n    }\r\n    SocialsIsSupportsNativeInvite() {\r\n        return this.toUnity(this.gp.socials.isSupportsNativeInvite);\r\n    }\r\n    SocialsCanJoinCommunity() {\r\n        return this.toUnity(this.gp.socials.canJoinCommunity);\r\n    }\r\n    SocialsIsSupportsNativeCommunityJoin() {\r\n        return this.toUnity(this.gp.socials.isSupportsNativeCommunityJoin);\r\n    }\r\n\r\n    // games collections\r\n    GamesCollectionsOpen(idOrTag) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag || 'ANY' };\r\n        return this.gp.gamesCollections.open(query);\r\n    }\r\n    GamesCollectionsFetch(idOrTag) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag };\r\n        return this.gp.gamesCollections\r\n            .fetch(query)\r\n            .then((result) => {\r\n                this.trigger('CallGamesCollectionsFetchTag', idOrTag);\r\n                this.trigger('CallGamesCollectionsFetch', JSON.stringify(result));\r\n\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallGamesCollectionsFetchError');\r\n            });\r\n    }\r\n\r\n    ChangeLanguage(language) {\r\n        return this.gp.changeLanguage(language);\r\n    }\r\n    ChangeLanguageByCode(language = '') {\r\n        return this.gp.changeLanguage(language.toLowerCase());\r\n    }\r\n    ChangeAvatarGenerator(generator) {\r\n        return this.gp.changeAvatarGenerator(generator);\r\n    }\r\n    LoadOverlay() {\r\n        return this.gp.loadOverlay();\r\n    }\r\n\r\n    // GAME\r\n    IsPaused() {\r\n        return this.toUnity(this.gp.isPaused);\r\n    }\r\n\r\n    Pause() {\r\n        return this.gp.pause();\r\n    }\r\n    Resume() {\r\n        return this.gp.resume();\r\n    }\r\n\r\n    GameplayStart() {\r\n        return this.gp.gameplayStart();\r\n    }\r\n    GameplayStop() {\r\n        return this.gp.gameplayStop();\r\n    }\r\n\r\n\r\n    // GAME\r\n\r\n\r\n    //Device\r\n    IsMobile() {\r\n        return this.toUnity(this.gp.isMobile);\r\n    }\r\n    //Device\r\n\r\n\r\n    // Server\r\n    ServerTime() {\r\n        return this.toUnity(this.gp.serverTime);\r\n    }\r\n    // Server\r\n\r\n\r\n\r\n    // System\r\n    IsDev() {\r\n        return this.toUnity(this.gp.isDev);\r\n    }\r\n\r\n    IsAllowedOrigin() {\r\n        return this.toUnity(this.gp.isAllowedOrigin);\r\n    }\r\n    // System\r\n\r\n\r\n\r\n    // Variables\r\n    VariablesFetch() {\r\n        return this.gp.variables\r\n            .fetch()\r\n            .then((result) => {\r\n                this.trigger('CallVariablesFetchSuccess', JSON.stringify(result));\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallVariablesFetchError');\r\n            });\r\n    }\r\n\r\n    VariablesHas(key) {\r\n        return this.toUnity(this.gp.variables.has(key));\r\n    }\r\n\r\n    VariablesGet(key) {\r\n        return this.toUnity(this.gp.variables.get(key));\r\n    }\r\n    // Variables\r\n\r\n\r\n\r\n    // Players\r\n    PlayersFetch(key) {\r\n        var obj = JSON.parse(key);\r\n        let ids = [];\r\n\r\n        if (parseInt(obj, 10) > 0) {\r\n            ids = [parseInt(obj, 10)];\r\n        } else {\r\n            ids = (obj.idsList || obj.idsArray).map(Number).filter(Boolean)\r\n        }\r\n\r\n        this.gp.players.fetch({ ids })\r\n            .then((result) => {\r\n                this.trigger('CallPlayersFetchSuccess', JSON.stringify(result.players));\r\n            }).catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallPlayersFetchError');\r\n            });\r\n    }\r\n    //Players\r\n\r\n\r\n    // Documents\r\n    DocumentsOpen() {\r\n        this.gp.documents.open({ type: 'PLAYER_PRIVACY_POLICY' });\r\n    }\r\n\r\n    DocumentsFetch() {\r\n        this.gp.documents.fetch({\r\n            type: 'PLAYER_PRIVACY_POLICY',\r\n            format: 'TXT'\r\n        });\r\n    }\r\n    // Documents\r\n\r\n\r\n\r\n\r\n\r\n    // Files\r\n    FilesUpload(tags) {\r\n        this.gp.files\r\n            .upload({\r\n                tags: tags\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n            })\r\n            .then((result) => {\r\n                this.trigger('CallFilesUploadSuccess', JSON.stringify(result));\r\n            })\r\n            .catch((err) => {\r\n                this.trigger('CallFilesUploadError');\r\n            });\r\n    }\r\n\r\n    FilesUploadUrl(url, filename, tags) {\r\n        this.gp.files\r\n            .uploadUrl({\r\n                url,\r\n                filename,\r\n                tags: tags\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n            })\r\n            .then((result) => {\r\n                this.trigger('CallFilesUploadUrlSuccess', JSON.stringify(result));\r\n            })\r\n            .catch((err) => {\r\n                this.trigger('CallFilesUploadUrlError');\r\n            });\r\n    }\r\n\r\n    FilesUploadContent(content, filename, tags) {\r\n        this.gp.files\r\n            .uploadContent({\r\n                content,\r\n                filename,\r\n                tags: tags\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n            })\r\n            .then((result) => {\r\n                this.trigger('CallFilesUploadContentSuccess', JSON.stringify(result));\r\n            })\r\n            .catch((err) => {\r\n                this.trigger('CallFilesUploadContentError');\r\n            });\r\n    }\r\n\r\n    FilesLoadContent(url) {\r\n        this.gp.files\r\n            .loadContent(url)\r\n            .then((result) => {\r\n                this.trigger('CallFilesLoadContentSuccess', result);\r\n            })\r\n            .catch((err) => {\r\n                this.trigger('CallFilesLoadContentError');\r\n            });\r\n    }\r\n\r\n    FilesChooseFile(type) {\r\n        this.gp.files\r\n            .chooseFile(type)\r\n            .then((result) => {\r\n                this.trigger('CallFilesChooseFile', result.tempUrl);\r\n            })\r\n            .catch((err) => {\r\n                this.trigger('CallFilesChooseFileError');\r\n            });\r\n    }\r\n\r\n    FilesFetch(filter) {\r\n        const query = JSON.parse(filter);\r\n        this.gp.files.fetch(query)\r\n            .then((result) => {\r\n                this.trigger('CallFilesFetchCanLoadMore', result.canLoadMore);\r\n                this.trigger('CallFilesFetchSuccess', JSON.stringify(result.items));\r\n            })\r\n            .catch((err) => {\r\n                this.trigger('CallFilesFetchError');\r\n            });\r\n    }\r\n\r\n    FilesFetchMore(filter) {\r\n        const query = JSON.parse(filter);\r\n        this.gp.files.fetchMore(query)\r\n            .then((result) => {\r\n                this.trigger('CallFilesFetchMoreCanLoadMore', result.canLoadMore);\r\n                this.trigger('CallFilesFetchMoreSuccess', JSON.stringify(result.items));\r\n            })\r\n            .catch((err) => {\r\n                this.trigger('CallFilesFetchMoreError');\r\n            });\r\n    }\r\n\r\n    // Files\r\n\r\n\r\n    // Channels\r\n\r\n    Channels_Open_Chat(chatId) {\r\n        if (chatId == -10) {\r\n            this.gp.channels.openChat();\r\n        }\r\n        else {\r\n            this.gp.channels.openChat({ chatId });\r\n        }\r\n    }\r\n    Channels_IsMainChatEnabled() {\r\n        return this.toUnity(this.gp.channels.isMainChatEnabled);\r\n    }\r\n\r\n    Channels_MainChatId() {\r\n        return this.gp.channels.mainChatId;\r\n    }\r\n\r\n    Channels_Join(channelId, password) {\r\n        this.gp.channels.join({ channelId, password, });\r\n    }\r\n\r\n    Channels_CancelJoin(channelId) {\r\n        this.gp.channels.cancelJoin({ channelId, });\r\n    }\r\n\r\n    Channels_Leave(channelId) {\r\n        this.gp.channels.leave({ channelId, });\r\n    }\r\n\r\n    Channels_Kick(channelId, playerId) {\r\n        this.gp.channels.kick({ channelId, playerId, });\r\n    }\r\n\r\n    Channels_Mute_UnmuteAt(channelId, playerId, unmuteAt) {\r\n        this.gp.channels.mute({ channelId, playerId, unmuteAt, });\r\n    }\r\n\r\n    Channels_Mute_Seconds(channelId, playerId, seconds) {\r\n        this.gp.channels.mute({ channelId, playerId, seconds: Number(seconds), });\r\n    }\r\n\r\n    Channels_UnMute(channelId, playerId) {\r\n        this.gp.channels.unmute({ channelId, playerId, });\r\n    }\r\n\r\n    Channels_SendInvite(channelId, playerId) {\r\n        this.gp.channels.sendInvite({ channelId, playerId, });\r\n    }\r\n\r\n    Channels_CancelInvite(channelId, playerId) {\r\n        this.gp.channels.cancelInvite({ channelId, playerId, });\r\n    }\r\n\r\n    Channels_AcceptInvite(channelId) {\r\n        this.gp.channels.acceptInvite({ channelId, });\r\n    }\r\n\r\n    Channels_RejectInvite(channelId) {\r\n        this.gp.channels.rejectInvite({ channelId });\r\n    }\r\n\r\n    Channels_FetchInvites(limit, offset) {\r\n        this.gp.channels.fetchInvites({ limit, offset, });\r\n    }\r\n\r\n    Channels_FetchMoreInvites(limit) {\r\n        this.gp.channels.fetchMoreInvites({ limit, });\r\n    }\r\n\r\n    Channels_FetchChannelInvites(channelId, limit, offset) {\r\n        this.gp.channels.fetchChannelInvites({ channelId, limit, offset, });\r\n    }\r\n\r\n    Channels_FetchMoreChannelInvites(channelId, limit) {\r\n        this.gp.channels.fetchMoreChannelInvites({ channelId, limit, });\r\n    }\r\n\r\n    Channels_FetchSentInvites(channelId, limit, offset) {\r\n        this.gp.channels.fetchSentInvites({ channelId, limit, offset, });\r\n    }\r\n\r\n    Channels_FetchMoreSentInvites(channelId, limit) {\r\n        this.gp.channels.fetchMoreSentInvites({ channelId, limit, });\r\n    }\r\n\r\n    Channels_AcceptJoinRequest(channelId, playerId) {\r\n        this.gp.channels.acceptJoinRequest({ channelId, playerId, });\r\n    }\r\n\r\n    Channels_RejectJoinRequest(channelId, playerId) {\r\n        this.gp.channels.rejectJoinRequest({ channelId, playerId, });\r\n    }\r\n\r\n    Channels_FetchJoinRequests(channelId, limit, offset) {\r\n        this.gp.channels.fetchJoinRequests({ channelId, limit, offset });\r\n    }\r\n\r\n    Channels_FetchMoreJoinRequests(channelId, limit) {\r\n        this.gp.channels.fetchMoreJoinRequests({ channelId, limit, });\r\n    }\r\n\r\n    Channels_FetchSentJoinRequests(channelId, limit, offset) {\r\n        this.gp.channels.fetchSentJoinRequests({ channelId, limit, offset, });\r\n    }\r\n\r\n    Channels_FetchMoreSentJoinRequests(channelId, limit) {\r\n        this.gp.channels.fetchMoreSentJoinRequests({ channelId, limit, });\r\n    }\r\n\r\n    Channels_SendMessage(channelId, text, tags) {\r\n        this.gp.channels.sendMessage({\r\n            channelId,\r\n            text,\r\n            tags: tags\r\n                .split(',')\r\n                .map((o) => o.trim())\r\n                .filter((f) => f),\r\n        });\r\n    }\r\n\r\n    Channels_SendPersonalMessage(playerId, text, tags) {\r\n        this.gp.channels.sendPersonalMessage({\r\n            playerId,\r\n            text,\r\n            tags: tags\r\n                .split(',')\r\n                .map((o) => o.trim())\r\n                .filter((f) => f),\r\n        });\r\n    }\r\n\r\n    Channels_SendFeedMessage(playerId, text, tags) {\r\n        this.gp.channels.sendFeedMessage({\r\n            playerId,\r\n            text,\r\n            tags: tags\r\n                .split(',')\r\n                .map((o) => o.trim())\r\n                .filter((f) => f),\r\n        });\r\n    }\r\n\r\n    Channels_EditMessage(messageId, text) {\r\n        this.gp.channels.editMessage({ messageId, text, });\r\n    }\r\n\r\n    Channels_DeleteMessage(messageId) {\r\n        this.gp.channels.deleteMessage({ messageId });\r\n    }\r\n\r\n    Channels_FetchMessages(channelId, tags, limit, offset) {\r\n        this.gp.channels.fetchMessages({\r\n            channelId,\r\n            tags: tags\r\n                .split(',')\r\n                .map((o) => o.trim())\r\n                .filter((f) => f),\r\n            limit,\r\n            offset,\r\n        }).then((result) => {\r\n            this.trigger('CallOnFetchMessagesCanLoadMore', JSON.stringify(result.canLoadMore));\r\n            this.trigger('CallOnFetchMessages', JSON.stringify(result.items));\r\n\r\n        }).catch((err) => {\r\n            console.warn(err);\r\n            this.trigger('CallOnFetchMessagesError');\r\n        });\r\n    }\r\n\r\n    Channels_FetchPersonalMessages(playerId, tags, limit, offset) {\r\n        this.gp.channels.fetchPersonalMessages({\r\n            playerId,\r\n            tags: tags\r\n                .split(',')\r\n                .map((o) => o.trim())\r\n                .filter((f) => f),\r\n            limit,\r\n            offset,\r\n        }).then((result) => {\r\n            this.trigger('CallOnFetchPersonalMessagesCanLoadMore', JSON.stringify(result.canLoadMore));\r\n            this.trigger('CallOnFetchPersonalMessages', JSON.stringify(result.items));\r\n        }).catch((err) => {\r\n            console.warn(err);\r\n            this.trigger('CallOnFetchPersonalMessagesError');\r\n        });\r\n    }\r\n\r\n    Channels_FetchFeedMessages(playerId, tags, limit, offset) {\r\n        this.gp.channels.fetchFeedMessages({\r\n            playerId,\r\n            tags: tags\r\n                .split(',')\r\n                .map((o) => o.trim())\r\n                .filter((f) => f),\r\n            limit,\r\n            offset,\r\n        }).then((result) => {\r\n            this.trigger('CallOnFetchFeedMessagesCanLoadMore', JSON.stringify(result.canLoadMore));\r\n            this.trigger('CallOnFetchFeedMessages', JSON.stringify(result.items));\r\n        }).catch((err) => {\r\n            console.warn(err);\r\n            this.trigger('CallOnFetchFeedMessagesError');\r\n        });\r\n    }\r\n\r\n    Channels_FetchMoreMessages(channelId, tags, limit) {\r\n        this.gp.channels.fetchMoreMessages({\r\n            channelId,\r\n            tags: tags\r\n                .split(',')\r\n                .map((o) => o.trim())\r\n                .filter((f) => f),\r\n            limit,\r\n        }).then((result) => {\r\n            this.trigger('CallOnFetchMoreMessagesCanLoadMore', result.canLoadMore);\r\n            this.trigger('CallOnFetchMoreMessages', JSON.stringify(result.items));\r\n        }).catch((err) => {\r\n            console.warn(err);\r\n            this.trigger('CallOnFetchMoreMessagesError');\r\n        });\r\n    }\r\n\r\n    Channels_FetchMorePersonalMessages(playerId, tags, limit) {\r\n        this.gp.channels.fetchMorePersonalMessages({\r\n            playerId,\r\n            tags: tags\r\n                .split(',')\r\n                .map((o) => o.trim())\r\n                .filter((f) => f),\r\n            limit,\r\n        }).then((result) => {\r\n            this.trigger('CallOnFetchMorePersonalMessagesCanLoadMore', result.canLoadMore);\r\n            this.trigger('CallOnFetchMorePersonalMessages', JSON.stringify(result.items));\r\n        }).catch((err) => {\r\n            console.warn(err);\r\n            this.trigger('CallOnFetchMorePersonalMessagesError');\r\n        });\r\n    }\r\n\r\n    Channels_FetchMoreFeedMessages(playerId, tags, limit) {\r\n        this.gp.channels.fetchMoreFeedMessages({\r\n            playerId,\r\n            tags: tags\r\n                .split(',')\r\n                .map((o) => o.trim())\r\n                .filter((f) => f),\r\n            limit,\r\n        }).then((result) => {\r\n            this.trigger('CallOnFetchMoreFeedMessagesCanLoadMore', result.canLoadMore);\r\n            this.trigger('CallOnFetchMoreFeedMessages', JSON.stringify(result.items));\r\n        }).catch((err) => {\r\n            console.warn(err);\r\n            this.trigger('CallOnFetchMoreFeedMessagesError');\r\n        });\r\n    }\r\n\r\n    Channels_DeleteChannel(channelId) {\r\n        this.gp.channels.deleteChannel({ channelId, });\r\n    }\r\n\r\n    Channels_FetchChannel(channelId) {\r\n        this.gp.channels.fetchChannel({ channelId, });\r\n    }\r\n\r\n\r\n\r\n    Channels_CreateChannel(filter) {\r\n        const query = JSON.parse(filter);\r\n        this.gp.channels.createChannel({ ...query, private: query.ch_private });\r\n    }\r\n\r\n    Channels_UpdateChannel(filter) {\r\n        const query = JSON.parse(filter);\r\n        this.gp.channels.updateChannel({ ...query, private: query.ch_private });\r\n    }\r\n\r\n    Channels_FetchChannels(filter) {\r\n        const query = JSON.parse(filter);\r\n        this.gp.channels.fetchChannels(query);\r\n    }\r\n\r\n    Channels_FetchMoreChannels(filter) {\r\n        const query = JSON.parse(filter);\r\n        this.gp.channels.fetchMoreChannels(query);\r\n    }\r\n    Channels_FetchMembers(filter) {\r\n        const query = JSON.parse(filter);\r\n        this.gp.channels.fetchMembers(query);\r\n    }\r\n    Channels_FetchMoreMembers(filter) {\r\n        const query = JSON.parse(filter);\r\n        this.gp.channels.fetchMoreMembers(query);\r\n    }\r\n\r\n    // Channels\r\n}\r\nfunction mapChannel(channel = {}) {\r\n    return {\r\n        ...channel,\r\n        ch_private: channel.private\r\n    };\r\n}\r\n\r\nfunction mapItemWithChannel(item = {}) {\r\n    return {\r\n        ...item,\r\n        channel: mapChannel(item.channel)\r\n    };\r\n}\r\nwindow.GamePushUnity = GamePushUnity;\r\n","import GamePushUnity from './GamePushUnity'\r\n\r\nwindow.GamePushUnity = GamePushUnity;\r\n"],"names":["GamePushUnity","constructor","gp","this","player","on","trigger","success","JSON","stringify","fields","map","field","defaultValue","default","leaderboard","achievements","window","focus","gamesCollections","fullscreen","ads","lastRewardedTag","socials","lang","ag","documents","document","content","channels","channel","mapChannel","err","id","result","canLoadMore","items","member","joinRequest","memberLeave","mute","invite","mapItemWithChannel","message","eventName","value","unityInstance","SendMessage","toUnity","String","mapItemsWithChannel","ch_private","private","Language","language","AvatarGenerator","avatarGenerator","PlatformType","platform","type","PlatformHasIntegratedAuth","hasIntegratedAuth","PlatformIsExternalLinksAllowed","isExternalLinksAllowed","AppTitle","app","title","AppDescription","description","AppImage","image","AppUrl","url","PlayerGetID","PlayerGetScore","score","PlayerSetScore","Number","PlayerAddScore","PlayerGetName","name","PlayerSetName","PlayerGetAvatar","avatar","PlayerSetAvatar","src","PlayerGet","key","get","PlayerSetString","set","PlayerSetNumber","PlayerSetBool","PlayerAdd","add","PlayerHas","has","PlayerSetFlag","Boolean","PlayerToggle","toggle","PlayerGetFieldName","getFieldName","PlayerGetFieldVariantName","getFieldVariantName","PlayerGetFieldVariantAt","index","variant","getField","variants","PlayerGetFieldVariantIndex","findIndex","v","PlayerReset","reset","PlayerRemove","remove","PlayerSync","override","sync","PlayerLoad","load","PlayerLogin","login","PlayerFetchFields","fetchFields","PlayerIsLoggedIn","isLoggedIn","PlayerHasAnyCredentials","hasAnyCredentials","PlayerIsStub","isStub","LeaderboardOpen","orderBy","order","limit","withMe","includeFields","displayFields","open","split","o","trim","filter","f","catch","console","warn","LeaderboardFetch","tag","fetch","then","leaderboardInfo","players","LeaderboardFetchPlayerRating","fetchPlayerRating","position","LeaderboardScopedOpen","idOrTag","parseInt","query","openScoped","LeaderboardScopedFetch","fetchScoped","leaderboardScopedInfo","LeaderboardScopedPublishRecord","key1","value1","key2","value2","key3","value3","publishRecord","record","LeaderboardScopedFetchPlayerRating","fetchPlayerRatingScoped","AchievementsOpen","AchievementsFetch","achievementsGroups","playerAchievements","AchievementsUnlock","unlock","AchievementsSetProgress","progress","setProgress","AchievementsHas","AchievementsGetProgress","getProgress","PaymentsFetchProducts","payments","fetchProducts","products","playerPurchases","PaymentsPurchase","purchase","PaymentsConsume","consume","PaymentsIsAvailable","isAvailable","PaymentsIsSubscriptionsAvailable","isSubscriptionsAvailable","PaymentsSubscribe","subscribe","PaymentsUnsubscribe","unsubscribe","FullscreenOpen","FullscreenClose","close","FullscreenToggle","AdsShowFullscreen","showFullscreen","AdsShowRewarded","showRewardedVideo","AdsShowPreloader","showPreloader","AdsShowSticky","showSticky","AdsCloseSticky","closeSticky","AdsRefreshSticky","refreshSticky","AdsIsAdblockEnabled","isAdblockEnabled","AdsIsStickyAvailable","isStickyAvailable","AdsIsFullscreenAvailable","isFullscreenAvailable","AdsIsRewardedAvailable","isRewardedAvailable","AdsIsPreloaderAvailable","isPreloaderAvailable","AdsIsStickyPlaying","isStickyPlaying","AdsIsFullscreenPlaying","isFullscreenPlaying","AdsIsRewardedPlaying","isRewardedPlaying","AdsIsPreloaderPlaying","isPreloaderPlaying","AnalyticsHit","analytics","hit","AnalyticsGoal","event","goal","SocialsShare","text","share","SocialsPost","post","SocialsInvite","SocialsJoinCommunity","joinCommunity","SocialsCommunityLink","communityLink","SocialsIsSupportsShare","isSupportsShare","SocialsIsSupportsNativeShare","isSupportsNativeShare","SocialsIsSupportsNativePosts","isSupportsNativePosts","SocialsIsSupportsNativeInvite","isSupportsNativeInvite","SocialsCanJoinCommunity","canJoinCommunity","SocialsIsSupportsNativeCommunityJoin","isSupportsNativeCommunityJoin","GamesCollectionsOpen","GamesCollectionsFetch","ChangeLanguage","changeLanguage","ChangeLanguageByCode","toLowerCase","ChangeAvatarGenerator","generator","changeAvatarGenerator","LoadOverlay","loadOverlay","IsPaused","isPaused","Pause","pause","Resume","resume","GameplayStart","gameplayStart","GameplayStop","gameplayStop","IsMobile","isMobile","ServerTime","serverTime","IsDev","isDev","IsAllowedOrigin","isAllowedOrigin","VariablesFetch","variables","VariablesHas","VariablesGet","PlayersFetch","obj","parse","ids","idsList","idsArray","DocumentsOpen","DocumentsFetch","format","FilesUpload","tags","files","upload","FilesUploadUrl","filename","uploadUrl","FilesUploadContent","uploadContent","FilesLoadContent","loadContent","FilesChooseFile","chooseFile","tempUrl","FilesFetch","FilesFetchMore","fetchMore","Channels_Open_Chat","chatId","openChat","Channels_IsMainChatEnabled","isMainChatEnabled","Channels_MainChatId","mainChatId","Channels_Join","channelId","password","join","Channels_CancelJoin","cancelJoin","Channels_Leave","leave","Channels_Kick","playerId","kick","Channels_Mute_UnmuteAt","unmuteAt","Channels_Mute_Seconds","seconds","Channels_UnMute","unmute","Channels_SendInvite","sendInvite","Channels_CancelInvite","cancelInvite","Channels_AcceptInvite","acceptInvite","Channels_RejectInvite","rejectInvite","Channels_FetchInvites","offset","fetchInvites","Channels_FetchMoreInvites","fetchMoreInvites","Channels_FetchChannelInvites","fetchChannelInvites","Channels_FetchMoreChannelInvites","fetchMoreChannelInvites","Channels_FetchSentInvites","fetchSentInvites","Channels_FetchMoreSentInvites","fetchMoreSentInvites","Channels_AcceptJoinRequest","acceptJoinRequest","Channels_RejectJoinRequest","rejectJoinRequest","Channels_FetchJoinRequests","fetchJoinRequests","Channels_FetchMoreJoinRequests","fetchMoreJoinRequests","Channels_FetchSentJoinRequests","fetchSentJoinRequests","Channels_FetchMoreSentJoinRequests","fetchMoreSentJoinRequests","Channels_SendMessage","sendMessage","Channels_SendPersonalMessage","sendPersonalMessage","Channels_SendFeedMessage","sendFeedMessage","Channels_EditMessage","messageId","editMessage","Channels_DeleteMessage","deleteMessage","Channels_FetchMessages","fetchMessages","Channels_FetchPersonalMessages","fetchPersonalMessages","Channels_FetchFeedMessages","fetchFeedMessages","Channels_FetchMoreMessages","fetchMoreMessages","Channels_FetchMorePersonalMessages","fetchMorePersonalMessages","Channels_FetchMoreFeedMessages","fetchMoreFeedMessages","Channels_DeleteChannel","deleteChannel","Channels_FetchChannel","fetchChannel","Channels_CreateChannel","createChannel","Channels_UpdateChannel","updateChannel","Channels_FetchChannels","fetchChannels","Channels_FetchMoreChannels","fetchMoreChannels","Channels_FetchMembers","fetchMembers","Channels_FetchMoreMembers","fetchMoreMembers","item"],"sourceRoot":""}